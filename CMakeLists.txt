cmake_minimum_required(VERSION 2.8.9)

project(StateMachineViewer)

set(CMAKE_EXECUTABLE_OUTPUT_PATH   ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH            ${CMAKE_BINARY_DIR}/lib)

if(qt5)
    add_definitions(-DQT5)
    macro(use_qt5lib lib)
        find_package(${lib} REQUIRED)
        include_directories(${${lib}_INCLUDE_DIRS})
    endmacro()
    use_qt5lib(Qt5Core)
    get_target_property(qmakebin Qt5::qmake IMPORTED_LOCATION)
    get_filename_component(QT_BINARY_DIR ${qmakebin} PATH)
    message(STATUS "Using Qt5 from ${QT_BINARY_DIR}")
    use_qt5lib(Qt5Widgets)
    set(qtlibs ${Qt5Widgets_LIBRARIES})
    macro(qt_moc)
        qt5_wrap_cpp(${ARGN} OPTIONS "-nw")
    endmacro()
    macro(qt_uic)
        qt5_wrap_ui(${ARGN})
    endmacro()
else()
    cmake_policy(SET CMP0020 NEW) # link qtmain
    set(QT_USE_IMPORTED_TARGETS true)
    find_package(Qt4 ${QT_MIN_VERSION} REQUIRED QtCore QtGui)
    include(${QT_USE_FILE})
    set(qtlibs ${QT_QTGUI_LIBRARIES}  ${QT_QTCORE_LIBRARIES})
    macro(qt_moc)
        qt4_wrap_cpp(${ARGN} OPTIONS "-nw")
    endmacro()
    macro(qt_uic)
        qt4_wrap_ui(${ARGN})
    endmacro()
endif()


if(WIN32)
    set(LIBCGRAPHVIZ_DLL 1)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
endif()

set(smvdir ${CMAKE_CURRENT_SOURCE_DIR}/statemachineviewer)

add_subdirectory(libcgraphviz)
add_subdirectory(statemachineviewer)
add_subdirectory(examples/trafficlight)

